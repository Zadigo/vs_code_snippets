{
	"Inline block": {
		"prefix": "jinja-inline-block",
		"body": [
			"{% block $1 %}$2{% endblock %}"
		],
		"description": "Creates a simple block"
	},
	"Block": {
		"prefix": "jinja-block",
		"body": [
			"{% block $1 %}",
			"\t$2",
			"{% endblock %}"
		],
		"description": "Creates a block to include content within it"
	},
	"Extension": {
		"prefix": "jinja-extends",
		"body": [
			"{% extends \"$1.html\" %}"
		],
		"description": "Extend a template"
	},
	"Tag": {
		"prefix": "jinja-tempalate-tag",
		"body": [
			"{% $1 %}"
		],
		"description": "Create a simple Jinja tag"
	},
	"Tag with filter": {
		"prefix": "jinja-tempalate-tag",
		"body": [
			"{% $1|${2:filter} %}"
		],
		"description": "Create a simple Jinja tag with a filter"
	},
	"Tag with argument": {
		"prefix": "jinja-tempalate-args",
		"body": [
			"{% $1 ${2:arg} %}"
		],
		"description": "Create a simple Jinja tag with an argument"
	},
	"Url": {
		"prefix": "jinja-url",
		"body": [
			"{% url \"$1\" %}"
		],
		"description": "Create a specific url tag"
	},
	"Url with paramater": {
		"prefix": "jinja-url-with-argument",
		"body": [
			"{% url \"$1\" ${2:argument} %}"
		],
		"description": "Create an url tag with parameters"
	},
	"If-statement": {
		"prefix": "jinja-if-statement",
		"body": [
			"{% if $1 %}",
			"\t$2",
			"{% endif %}"
		],
		"description": "If statement"
	},
	"If-Else-statement": {
		"prefix": "jinja-if-else-statement",
		"body": [
			"{% if $1 %}",
			"\t$2",
			"{% else %}",
			"\t$3",
			"{% endif %}"
		],
		"description": "If-Else statement"
	},
	"For-statement": {
		"prefix": "jinja-for-statement",
		"body": [
			"{% for $1 in $2 %}",
			"\t$3",
			"{% endfor %}"
		],
		"description": "For statement"
	},
	"Variable": {
		"prefix": "jinja-variable",
		"body": [
			"{{ $1 }}"
		],
		"description": "Create a simple Jinja variable"
	},
	"Variable with default": {
		"prefix": "jinja-variable-default",
		"body": [
			"{{ $1|default:\"$2\" }}"
		],
		"description": "Create a variable with a default value if empty"
	},
	"Translation": {
		"prefix": "jinja-trans",
		"body": [
			"{% trans \"$1\" %}"
		],
		"description": "Create a translation tag"
	},
	"Include": {
		"prefix": "jinja-include",
		"body": [
			"{% include \"$1\" %}"
		],
		"description": "Include an element in the template"
	},
	"Include with context": {
		"prefix": "jinja-include-parameters",
		"body": [
			"{% include \"$1\" with $2=\"$3\" %}"
		],
		"description": "Include an element in the temmplate by passing variables to it"
	},
	"Csrf": {
		"prefix": "jinja-csrf",
		"body": [
			"{% csrf_token %}"
		],
		"description": "Add a CSRF token"
	},
	"Load": {
		"prefix": "jinja-load",
		"body": [
			"{% load $1 %}"
		],
		"description": "Load and element to a template"
	},
	"Date": {
		"prefix": "jinja-date",
		"body": [
			"{{ $1|date:\"${2:d} ${3:F} ${4:Y}\" }}"
		],
		"description": "Format a date in the template"
	},
	"Text to URL": {
		"prefix": "jinja-urlize",
		"body": [
			"{{ ${value}|urlize }}"
		],
		"description": "Transform an url or email into a link"
	},
	"With": {
		"prefix": "jinja-with",
		"body": [
			"{% with $1=$2 %}",
			"\t$3",
			"{% endwith %}"
		],
		"description": "Create a placeholder with for a value"
	},
	"For-empty": {
		"prefix": "jinja-for-empty",
		"body": [
			"{% for $1 in $2 %}",
			"\t$3",
			"{% empty %}",
			"\t$4",
			"{% endfor %}"
		],
		"description": "For loop with an empty option when the value is none"
	},
	"Time until": {
		"prefix": "jinja-time-until",
		"body": [
			"{{ $1|timeuntil:$2 }}"
		],
		"description": "Time until filter"
	},
	"Time since": {
		"prefix": "jinja-time-since",
		"body": [
			"{{ $1|timesince:$2 }}"
		],
		"description": "Time since filter"
	},
	"Title": {
		"prefix": "jinja-title",
		"body": [
			"{{ $1|title }}"
		],
		"description": "Capitalize the first letter of each word"
	},
	"Urlize": {
		"prefix": "jinja-urlize",
		"body": [
			"{{ $1|urlize }}"
		],
		"description": "Transform a string url to a clickable url"
	},
	"Phone to numeric": {
		"prefix": "jinja-phone-to-numeric",
		"body": [
			"{{ $1|phone2numeric }}"
		],
		"description": "Transform a string containing a phone to its numerical equivalent"
	},
	"JSON script": {
		"prefix": "jinja-json-script",
		"body": [
			"{{ $1|json_script:\"${2:id}\" }}"
		],
		"description": "Transform a python dict to a useable Javascript object"
	},
	"Capitalize": {
		"prefix": "jinja-capitalize-first",
		"body": [
			"{{ $1|capfirst }}"
		],
		"description": "Capitalize the first letter of a word"
	},
	"Pluralize": {
		"prefix": "jinja-capitalize-first",
		"body": [
			"{{ $1|pluralize }}"
		],
		"description": "Returns a suffix (e.g. s) if value is not equals to one"
	},
	"Current date": {
		"prefix": "jinja-now",
		"body": [
			"{% now \"${1:Y}\" %}"
		],
		"description": "Returns the current date specified under the format"
	},
	"Debugging": {
		"prefix": "jinja-debug",
		"body": [
			"{% debug %}"
		],
		"description": "Debugging"
	},
	"Date filter": {
		"prefix": "jinja-date-filter",
		"body": [
			"{{ $1|date:\"D M Y\" }}"
		],
		"description": "Date filter"
	},
	"Multi-comment": {
		"prefix": "jinja-comment-multiline",
		"body": [
			"{% comment %}",
			"\t$1",
			"{% endcomment %}"
		],
		"description": "Multi-line comment"
	},
	"Comment": {
		"prefix": "jinja-comment",
		"body": [
			"{# $1 #}"
		],
		"description": "Comment"
	},
	"Material design HTML": {
		"prefix": "mat-html:5",
		"body": [
			"<!DOCTYPE html>",
			"<html lang=\"fr\">",
			"\t<head>",
			"\t\t<meta charset=\"UTF-8\">",
			"\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">",
			"\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">",
			"\t\t<title>{% block title %}{% endblock %}</title>",
			"",
			"\t\t<!-- Google stylesheets -->",
			"\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">",
			"\t\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.1.0/css/all.css\">",
			"\t\t<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">",
			"\t</head>",
			"\t<body>",
			"\t\t<main>",
			"\t\t$2",
			"\t\t</main>",
			"",
			"\t\t<!-- JQuery -->",
			"\t\t<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>",
			"",
			"\t\t<!-- Minified JavaScript -->",
			"\t\t<script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/js/materialize.min.js\"></script>",
			"\t\t<!-- Materialize scripts -->",
			"",
			"\t\t<script>",
			"\t\t\t$(document).ready(function(){",
			"\t\t\t\t// Sidenav",
			"\t\t\t\t$('.sidenav').sidenav();",
			"\t\t\t\t// Scrollspy",
			"\t\t\t\t$('.scrollspy').scrollSpy();",
			"\t\t\t\t// Select",
			"\t\t\t\t$('select').formSelect();",
			"\t\t\t\t// Modals",
			"\t\t\t\t$('.modal').modal();",
			"\t\t\t});",
			"\t\t</script>",
			"",
			"\t\t<!-- LODASH -->",
			"\t\t<script src=\"https://cdn.jsdelivr.net/npm/lodash@4.17.15/lodash.min.js\"></script>",
			"",
			"\t\t<!-- VUEJS -->",
			"\t\t<script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script>",
			"\t</body>",
			"</html>"
		],
		"description": "HTML template with material design"
	},
	"Truncate": {
		"prefix": "jinja-truncate-chars",
		"body": [
			"{{ $1|truncatechars:${2:number} }}"
		],
		"description": "Truncate characters"
	},
	"Link": {
		"prefix": "jinja-link",
		"body": [
			"<a href=\"{% url '$1' %}\">$2</a>"
		],
		"description": "Create an HTML link using Jinja"
	},
	"Link with parameter": {
		"prefix": "jinja-link-parameter",
		"body": [
			"<a href=\"{% url '$1' ${2: parameter} %}\">$2</a>"
		],
		"description": "Create an HTML link using Jinja"
	},
	"Vue component tag": {
		"prefix": "vue-component-tag",
		"body": [
			"<$1 />"
		],
		"description": "Create vue component in HTML tag"
	},
	"Vue component tag with bind": {
		"prefix": "vue-component-bind",
		"body": [
			"<$1 v-bind:${1:parameter}=\"${2:parameter}\" />"
		],
		"description": "Create vue component in HTML with v-bind"
	},
	"Vue component tag with loop": {
		"prefix": "vue-component-for",
		"body": [
			"<$1 v-for=\"${2:parameter}\" :key=\"${3:parameter}\" />"
		],
		"description": "Create vue component in HTML with for-loop"
	},
	"Vue component tag with action": {
		"prefix": "vue-component-action",
		"body": [
			"<$1 @${1:action}=\"${:function}\" />"
		],
		"description": "Create vue component with an event action"
	},
	"Static": {
		"prefix": "jinja-static-link",
		"body": [
			"<script src=\"{% static '$1' %}\"></script>"
		],
		"description": "Create an static tag using Jinja"
	},
	"Load static prefix": {
		"prefix": "jinja-get-static-prefix",
		"body": [
			"{% get_static_prefix as STATIC_PREFIX %}"
		],
		"description": "Load static prefix at the top of the document"
	}
}